ARG BASE_TAG="develop"
ARG BASE_IMAGE="core-debian-bookworm"
FROM kasmweb/$BASE_IMAGE:$BASE_TAG

USER root

ENV HOME /home/kasm-default-profile
ENV STARTUPDIR /dockerstartup
WORKDIR $HOME

### Envrionment config
ENV DEBIAN_FRONTEND=noninteractive \
    SKIP_CLEAN=true \
    KASM_RX_HOME=$STARTUPDIR/kasmrx \
    DONT_PROMPT_WSL_INSTALL="No_Prompt_please" \
    INST_DIR=$STARTUPDIR/install \
    INST_SCRIPTS="/ubuntu/install/tools/install_tools_deluxe.sh \
                  /ubuntu/install/misc/install_tools.sh \
                  /ubuntu/install/chrome/install_chrome.sh \
                  /ubuntu/install/chromium/install_chromium.sh \
                  /ubuntu/install/firefox/install_firefox.sh \
                  /ubuntu/install/vs_code/install_vs_code.sh \
                  /ubuntu/install/remmina/install_remmina.sh \
                  /ubuntu/install/only_office/install_only_office.sh \
                  /ubuntu/install/gimp/install_gimp.sh \
                  /ubuntu/install/vlc/install_vlc.sh \
                  /ubuntu/install/cleanup/cleanup.sh"
# Copy install scripts
COPY ./src/ $INST_DIR

# Run installations
RUN \
  for SCRIPT in $INST_SCRIPTS; do \
    bash ${INST_DIR}${SCRIPT}; \
  done && \
  $STARTUPDIR/set_user_permission.sh $HOME && \
  rm -f /etc/X11/xinit/Xclients && \
  chown 1000:0 $HOME && \
  mkdir -p /home/kasm-user && \
  chown -R 1000:0 /home/kasm-user && \
  rm -Rf ${INST_DIR}

######### START CUSTOMIZATION ########

# install apt packages
RUN apt-get update && apt-get install -y \
        python3-pip libasound2 libegl1-mesa libgl1-mesa-glx \
        libxcomposite1 libxcursor1 libxi6 libxrandr2 libxss1 \
        libxtst6 gdal-bin ffmpeg vlc dnsutils iputils-ping \
        git remmina remmina-plugin-rdp

RUN sudo apt update && sudo apt install pipx -y
RUN pipx ensurepath

# modification for debian > 12 + later ubuntu
python3 -m mne .venv/mne

RUN pip3 install numpy torch opencv-python torchvision typing torchstat torchsummary ptflops onnx onnxruntime lxml scikit-image Pillow ffmpeg tensorflow geopandas

# Install Anaconda3
COPY resources/install_anaconda.sh /tmp/
RUN bash /tmp/install_anaconda.sh

# Install packages in conda environment
USER 1000
COPY resources/install_conda_packages.sh /tmp/
RUN bash /tmp/install_conda_packages.sh
USER root 

# Install nvtop
COPY resources/install_nvtop.sh /tmp/
RUN bash /tmp/install_nvtop.sh

# QGIS
COPY resources/install_qgis.sh /tmp/
RUN bash /tmp/install_qgis.sh

# Install PyCharm
RUN cd /opt/ \
    && wget https://download.jetbrains.com/python/pycharm-community-2021.1.1.tar.gz \
    && tar xvf pycharm-community-*.tar.gz \
    && rm -rf pycharm-community-*.tar.gz \
    && mv /opt/pycharm-community-2021.1.1 /opt/pycharm

# Create desktop shortcuts
COPY resources/spyder.desktop $HOME/Desktop/
COPY resources/jupyter.desktop $HOME/Desktop/
COPY resources/pycharm.desktop ${HOME}/Desktop/
RUN cp /usr/share/applications/org.remmina.Remmina.desktop $HOME/Desktop/ \
    && chmod +x $HOME/Desktop/org.remmina.Remmina.desktop \
    && chown 1000:1000 $HOME/Desktop/org.remmina.Remmina.desktop


######### END CUSTOMIZATIONS ########
# Userspace Runtime
ENV HOME /home/kasm-user

RUN chown -R 1000:0 $HOME

WORKDIR $HOME
USER 1000


CMD ["--tail-log"]
